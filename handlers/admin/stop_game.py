import logging
from aiogram import Router, F
from aiogram.types import Message
from db import get_connection

router = Router(name="admin_stop_game")

@router.message(F.text == "–ó–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É")
async def stop_game(message: Message):
    """
    –°—Ç–æ–ø –∏–≥—Ä—ã:
    - games.status -> finished
    - games.finished_at = NOW()
    - —Ä–∞—Å—Å—ã–ª–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º
    """
    try:
        conn = get_connection()
        cur = conn.cursor(dictionary=True)

        cur.execute("SELECT id, status FROM games ORDER BY id DESC LIMIT 1")
        game = cur.fetchone()
        if not game:
            await message.answer("‚ö†Ô∏è –ò–≥—Ä–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
            return

        if game["status"] != "in_progress":
            await message.answer("‚ö†Ô∏è –ù–µ–ª—å–∑—è –∑–∞–≤–µ—Ä—à–∏—Ç—å: –∏–≥—Ä–∞ –µ—â—ë –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞.")
            return

        cur.execute("""
            UPDATE games
               SET status = 'finished',
                   finished_at = NOW()
             WHERE id = %s
        """, (game["id"],))
        conn.commit()

        cur.execute("SELECT telegram_id FROM players")
        players = cur.fetchall()
        for p in players:
            try:
                await message.bot.send_message(p["telegram_id"], "üèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –°–ø–∞—Å–∏–±–æ –∑–∞ —É—á–∞—Å—Ç–∏–µ.")
            except Exception:
                logging.exception("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∏–≥—Ä–æ–∫—É")

        await message.answer("üèÅ –ò–≥—Ä–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞! –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∏–≥—Ä–æ–∫–∞–º –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω—ã.")
    except Exception as e:
        logging.exception("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã")
        await message.answer(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏ –∏–≥—Ä—ã: {e}")
    finally:
        try:
            cur.close()
            conn.close()
        except Exception:
            pass
